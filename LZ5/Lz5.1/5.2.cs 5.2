using System;
using System.Security.Cryptography;
using System.Text;

namespace LAB5_1
{
    class Program
    {
        static void Main()
        {
            while (true)
            {
                Console.WriteLine("Enter password:");
                string password = Console.ReadLine();

                SaltedHash hashedPassword = new SaltedHash(password);

                Console.WriteLine("Salt: " + hashedPassword.GetSalt());
                Console.WriteLine("Salted Hash: " + hashedPassword.GetSaltedHash());
            }
        }
    }

    class SaltedHash
    {
        private byte[] Salt { get; }
        private string SaltedHashValue { get; }

        public SaltedHash(string password)
        {
            using (var rng = new RNGCryptoServiceProvider())
            {
                Salt = new byte[32];
                rng.GetBytes(Salt);
            }

            byte[] passwordBytes = Encoding.Unicode.GetBytes(password);
            byte[] saltedPassword = new byte[Salt.Length + passwordBytes.Length];

            Buffer.BlockCopy(Salt, 0, saltedPassword, 0, Salt.Length);
            Buffer.BlockCopy(passwordBytes, 0, saltedPassword, Salt.Length, passwordBytes.Length);

            using (var sha256 = SHA256.Create())
            {
                byte[] hash = sha256.ComputeHash(saltedPassword);
                SaltedHashValue = Convert.ToBase64String(hash);
            }
        }

        public string GetSaltedHash()
        {
            return SaltedHashValue;
        }

        public string GetSalt()
        {
            return Convert.ToBase64String(Salt);
        }
    }
}

