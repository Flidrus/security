using System;
using System.Diagnostics;
using System.Security.Cryptography;
using System.Text;

namespace 5_2
{
    internal class Program
    {
        static void Main()
        {
            Console.WriteLine("Please input a password:");
        string passwordToHash = Console.ReadLine();

            for (int i = 5 * 10000; i < 5 * 10000 + (10 * 50000); i += 50000)
            {
                HashPassword(passwordToHash, i);
            }

            Console.ReadLine();
        }

        public static byte[] GenerateSalt()
        {
            using (var randomNumberGenerator = new RNGCryptoServiceProvider())
            {
                var randomNumber = new byte[32];
                randomNumberGenerator.GetBytes(randomNumber);
                return randomNumber;
            }
        }

        public static byte[] HashPassword(string passwordToHash, int numberOfRounds)
        {
            byte[] salt = GenerateSalt();

            var sw = new Stopwatch();
            sw.Start();

            using (var rfc2898 = new Rfc2898DeriveBytes(passwordToHash, salt, numberOfRounds))
            {
                byte[] hashedPassword = rfc2898.GetBytes(20);
                sw.Stop();

                Console.WriteLine();
                Console.WriteLine("Password to hash : " + passwordToHash);
                Console.WriteLine("Hashed Password : " + Convert.ToBase64String(hashedPassword));
                Console.WriteLine("Iterations <" + numberOfRounds + "> Elapsed Time: " + sw.ElapsedMilliseconds + "ms");

                return hashedPassword;
            }
        }
    }
}
