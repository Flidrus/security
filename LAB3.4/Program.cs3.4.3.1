using System;
using System.Collections;
using System.Security.Cryptography;
using System.Text;

namespace Lz3_4_3
{
    class Program
    {
        static byte[] GenerateRandomKey()
        {
            byte[] key = new byte[32];
            using (var rng = new RNGCryptoServiceProvider())
            {
                rng.GetBytes(key);
            }
            return key;
        }

        static byte[] CalculateHMAC(string message, byte[] key)
        {
            using (var hmac = new HMACSHA256(key))
            {
                byte[] messageBytes = Encoding.UTF8.GetBytes(message);
                return hmac.ComputeHash(messageBytes);
            }
        }

        static bool VerifyHMAC(string message, byte[] storedHMAC, byte[] key)
        {
            byte[] computedHMAC = CalculateHMAC(message, key);
            return StructuralComparisons.StructuralEqualityComparer.Equals(computedHMAC, storedHMAC);
        }

        static void Main()
        {
            string secretMessage = "This is a secret message.";

            // Генерування випадкового ключа для HMAC
            byte[] key = GenerateRandomKey();

            // Розрахунок HMAC для секретного повідомлення
            byte[] hmac = CalculateHMAC(secretMessage, key);
            Console.WriteLine($"HMAC of the secret message: {BitConverter.ToString(hmac).Replace("-", "")}");

            // Перевірка автентичності повідомлення за допомогою HMAC
            bool isVerified = VerifyHMAC(secretMessage, hmac, key);

            if (isVerified)
            {
                Console.WriteLine("Message is authentic.");
            }
            else
            {
                Console.WriteLine("Message verification failed. The message may have been tampered with.");
            }
        }
    }
}



